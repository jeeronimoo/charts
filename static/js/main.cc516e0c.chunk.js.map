{"version":3,"sources":["modules/d3/bar-name-value/index.jsx","modules/d3/bar-name-value/data.js","modules/utils/index.js","modules/d3/index.jsx","App.jsx","index.js"],"names":["BarNameValueChart","svgRef","createRef","componentDidUpdate","updateChart","getMainCalculations","props","data","width","height","plotWidth","margin","left","right","plotHeight","top","bottom","yMaxDomain","d3","map","el","value","dataMinValue","yMinDomain","renderChart","plot","current","append","attr","yScale","domain","rangeRound","xScale","length","padding","call","tickFormat","i","name","selectAll","style","bars","exit","remove","enter","bandwidth","d","select","transition","duration","this","border","ref","PureComponent","barNameValueData","getBarNameValueData","Math","round","random","D3Charts","state","updateTime","barNameValue","clearInterval","window","intervalRef","setInterval","changeData","setState","changeUpdateTime","isActive","time","display","alignItems","marginRight","ButtonGroup","aria-label","Button","variant","onClick","active","App","module","renderModule","selectModule","className","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","defaultActiveKey","Link","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc516e0c.chunk.js","sourcesContent":["import React, { createRef, PureComponent } from \"react\";\nimport * as d3 from \"d3\";\n\nexport class BarNameValueChart extends PureComponent {\n  svgRef = createRef();\n\n  componentDidMount() {\n    this.renderChart();\n  }\n\n  componentDidUpdate = () => {\n    this.updateChart();\n  };\n\n  getMainCalculations = () => {\n    const { data, width, height } = this.props;\n\n    const plotWidth = width - margin.left - margin.right;\n    const plotHeight = height - margin.top - margin.bottom;\n\n    const yMaxDomain = d3.max(data.map((el) => el.value)) || 0;\n    const dataMinValue = d3.min(data.map((el) => el.value)) || 0;\n    const yMinDomain = dataMinValue > 0 ? 0 : dataMinValue;\n\n    return {\n      plotWidth,\n      plotHeight,\n      yMaxDomain,\n      yMinDomain,\n    };\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const {\n      plotWidth,\n      plotHeight,\n      yMaxDomain,\n      yMinDomain,\n    } = this.getMainCalculations();\n\n    const plot = d3\n      .select(this.svgRef.current)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([yMinDomain, yMaxDomain])\n      .rangeRound([plotHeight, 0]);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(d3.range(data.length))\n      .rangeRound([0, plotWidth])\n      .padding(0.4);\n\n    // const color = d3\n    //   .scaleLinear()\n    //   .domain([yMinDomain, yMaxDomain])\n    //   .range([\"steelblue\", \"#378b8c\"]);\n\n    // X Axis\n    plot\n      .append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", `translate(0,${plotHeight})`)\n      .call(d3.axisBottom(xScale).tickFormat((i) => data[i].name))\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-10px\")\n      .attr(\"dy\", \"-1px\")\n      .attr(\"transform\", \"rotate(-45)\");\n\n    // Y Axis\n    // prettier-ignore\n    plot\n      .append('g')\n      .attr('class', 'yAxis')\n      .call(d3.axisLeft(yScale));\n\n    // Bars\n    const bars = plot.selectAll(\"rect\").data(data);\n\n    bars.exit().attr(\"fill\", \"green\").remove();\n\n    bars\n      .enter()\n      .append(\"rect\")\n      // FIXME: 'enter()' doesnt work properly\n      // .join(\"rect\")\n      // .merge(bars)\n      .attr(\"fill\", \"steelblue\")\n      .attr(\"opacity\", \"0.7\")\n      // .attr(\"fill\", (d) => color(d.value))\n      .attr(\"width\", xScale.bandwidth())\n      .attr(\"height\", (d) => plotHeight - yScale(d.value))\n      .attr(\"x\", (d, i) => xScale(i))\n      .attr(\"y\", (d) => yScale(d.value));\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const {\n      plotWidth,\n      plotHeight,\n      yMaxDomain,\n      yMinDomain,\n    } = this.getMainCalculations();\n\n    const plot = d3.select(this.svgRef.current).select(\"g\");\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([yMinDomain, yMaxDomain])\n      .rangeRound([plotHeight, 0]);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(d3.range(data.length))\n      .rangeRound([0, plotWidth])\n      .padding(0.4);\n\n    // X Axis\n    plot\n      .select(\".xAxis\")\n      .transition()\n      .duration(500)\n      .attr(\"transform\", `translate(0,${plotHeight})`)\n      .call(d3.axisBottom(xScale).tickFormat((i) => data[i].name))\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-10px\")\n      .attr(\"dy\", \"-1px\")\n      .attr(\"transform\", \"rotate(-45)\");\n\n    // Y Axis\n    // prettier-ignore\n    plot\n        .select('.yAxis')\n        .transition()\n        .duration(500)\n        .call(d3.axisLeft(yScale));\n\n    const bars = plot.selectAll(\"rect\").data(data);\n\n    bars.exit().remove();\n\n    bars\n      .transition()\n      .duration(1000)\n      .attr(\"height\", (d) => plotHeight - yScale(d.value))\n      .attr(\"y\", (d) => yScale(d.value));\n  };\n\n  render() {\n    const { width, height } = this.props;\n\n    return (\n      <div style={{ width, height, border: \"1px solid black\" }}>\n        <svg ref={this.svgRef} width={width} height={height} />\n      </div>\n    );\n  }\n}\n\nconst margin = {\n  top: 30,\n  right: 30,\n  bottom: 50,\n  left: 30,\n};\n","import { getRandomNumber } from \"../../utils\";\n\nexport const barNameValueData = [\n  {\n    name: \"Andy\",\n    value: 10,\n  },\n  {\n    name: \"James\",\n    value: 30,\n  },\n  {\n    name: \"Cris\",\n    value: 20,\n  },\n  {\n    name: \"Susan\",\n    value: 10,\n  },\n  {\n    name: \"Ted\",\n    value: 50,\n  },\n  {\n    name: \"Mark\",\n    value: 30,\n  },\n  {\n    name: \"Julia\",\n    value: 55,\n  },\n  {\n    name: \"Zack\",\n    value: 42,\n  },\n];\n\nexport const getBarNameValueData = () =>\n  barNameValueData.map(({ name, value }) => ({\n    name,\n    value: getRandomNumber(),\n  }));\n","export const getRandomNumber = () =>\n  Math.round(Math.random() * 10) * Math.round(Math.random() * 100);\n","import React, { PureComponent } from \"react\";\nimport { BarNameValueChart } from \"./bar-name-value\";\nimport { getBarNameValueData } from \"./bar-name-value/data\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\n\nexport class D3Charts extends PureComponent {\n  state = {\n    updateTime: 2000,\n    barNameValue: getBarNameValueData(),\n  };\n\n  componentDidMount() {\n    this.setInterval(this.state.updateTime);\n  }\n\n  componentWillUnmount() {\n    this.clearInterval();\n  }\n\n  clearInterval = () => {\n    window.clearInterval(this.intervalRef);\n  };\n\n  setInterval = (updateTime) => {\n    this.intervalRef = setInterval(this.changeData, updateTime);\n  };\n\n  changeData = () => {\n    this.setState({\n      barNameValue: getBarNameValueData(),\n    });\n  };\n\n  changeUpdateTime = (updateTime) => () => {\n    this.clearInterval();\n    this.setState({ updateTime });\n\n    if (updateTime !== 0) {\n      this.setInterval(updateTime);\n    }\n  };\n\n  isActive = (time) => {\n    return this.state.updateTime === time;\n  };\n\n  render() {\n    return (\n      <div style={{ padding: 10 }}>\n        <div style={{ margin: 10, display: \"flex\", alignItems: \"baseline\" }}>\n          <p style={{ marginRight: 10 }}>Update every:</p>\n          <ButtonGroup aria-label=\"Basic example\">\n            <Button\n              variant=\"info\"\n              onClick={this.changeUpdateTime(0)}\n              active={this.isActive(0)}\n            >\n              None\n            </Button>\n            <Button\n              variant=\"info\"\n              onClick={this.changeUpdateTime(2000)}\n              active={this.isActive(2000)}\n            >\n              2s\n            </Button>\n            <Button\n              variant=\"info\"\n              onClick={this.changeUpdateTime(5000)}\n              active={this.isActive(5000)}\n            >\n              5s\n            </Button>\n            <Button\n              variant=\"info\"\n              onClick={this.changeUpdateTime(10000)}\n              active={this.isActive(10000)}\n            >\n              10s\n            </Button>\n          </ButtonGroup>\n        </div>\n        <BarNameValueChart\n          width={300}\n          height={300}\n          data={this.state.barNameValue}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport \"./App.css\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { D3Charts } from \"./modules/d3\";\n\nexport class App extends PureComponent {\n  state = {\n    module: \"d3\",\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"light\" expand=\"sm\">\n          <Navbar.Brand href=\"#d3\">Charts</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\" variant=\"pills\" defaultActiveKey=\"#d3\">\n              <Nav.Link href=\"#d3\" onClick={this.selectModule(\"d3\")}>\n                D3.js\n              </Nav.Link>\n              <Nav.Link href=\"#dc\" onClick={this.selectModule(\"dc\")}>\n                Dc.js\n              </Nav.Link>\n              <Nav.Link href=\"#svg\" onClick={this.selectModule(\"svg\")}>\n                svg\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <div>{this.renderModule()}</div>\n      </div>\n    );\n  }\n\n  renderModule = () => {\n    const { module } = this.state;\n\n    switch (module) {\n      case \"d3\":\n        return <D3Charts />;\n\n      case \"dc\":\n        return null;\n\n      case \"svg\":\n        return null;\n    }\n  };\n\n  selectModule = (module) => () => {\n    this.setState({ module });\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\nimport { App } from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}